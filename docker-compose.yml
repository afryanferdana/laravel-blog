version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-container
    environment:
      - SSL_MODE=off
      - AUTORUN_ENABLED=true
      - PHP_OPCACHE_ENABLE=1
      - HEALTHCHECK_PATH=/up
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    ports:
      - "80:80"
    depends_on:
      - db
      - redis
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: db-container
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: app_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis-container
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx-container
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Menggunakan konfigurasi nginx.conf yang sudah Anda buat
      - .:/var/www/html  # Menyambungkan direktori aplikasi ke /var/www/html di dalam container
    ports:
      - "80:80"  # Menyambungkan port 80 dari host ke container Nginx
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped


volumes:
  db-data:

networks:
  app-network:
    driver: bridge
